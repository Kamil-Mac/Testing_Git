{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\http\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]); //API send data in JSON format, standardowy format dla api\n\n  async function fetchMoviesHandler() {\n    const response = fetch('https://swapi.dev/api/films/'); //konwersja json na js, dostaje to co w dokumentacji, obiekt\n\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        releaseDate: movieData.release_date,\n        openingText: movieData.opening_crawl\n      };\n    }); //konwersja otrzymanych danych na pasujacy obiekt, ktory jest przesylany w do komponentu \n\n    setMovies(transformedMovies);\n  }\n\n  ; //lub wersja jak ponizej\n  // const fetchMoviesHandler = () => {\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     //konwersja json na js, dostaje to co w dokumentacji, obiekt\n  //     .then((data) => {\n  //       const transformedMovies = data.results.map(movieData => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           releaseDate: movieData.release_date,\n  //           openingText: movieData.opening_crawl\n  //         };\n  //       });\n  //       //konwersja otrzymanych danych na pasujacy obiekt, ktory jest przesylany w do komponentu \n  //       setMovies(transformedMovies);\n  //     })\n  // };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/React/http/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC,CAFa,CAGb;;AAEA,iBAAeK,kBAAf,GAAoC;AAClC,UAAMC,QAAQ,GAAGC,KAAK,CAAC,8BAAD,CAAtB,CADkC,CAElC;;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,UAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;AACtD,aAAO;AACLC,QAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,QAAAA,WAAW,EAAEJ,SAAS,CAACK,YAHlB;AAILC,QAAAA,WAAW,EAAEN,SAAS,CAACO;AAJlB,OAAP;AAMD,KAPyB,CAA1B,CALkC,CAalC;;AACAhB,IAAAA,SAAS,CAACM,iBAAD,CAAT;AACH;;AAAA,GApBc,CAsBf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEL,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEF,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUC;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\n  const [movies, setMovies] = useState([]);\n  //API send data in JSON format, standardowy format dla api\n  \n  async function fetchMoviesHandler() {\n    const response = fetch('https://swapi.dev/api/films/');\n    //konwersja json na js, dostaje to co w dokumentacji, obiekt\n    const data = await response.json();\n\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        releaseDate: movieData.release_date,\n        openingText: movieData.opening_crawl\n      };\n    });\n    //konwersja otrzymanych danych na pasujacy obiekt, ktory jest przesylany w do komponentu \n    setMovies(transformedMovies);\n};\n\n//lub wersja jak ponizej\n\n// const fetchMoviesHandler = () => {\n//   fetch('https://swapi.dev/api/films/')\n//     .then((response) => {\n//       return response.json();\n//     })\n//     //konwersja json na js, dostaje to co w dokumentacji, obiekt\n//     .then((data) => {\n//       const transformedMovies = data.results.map(movieData => {\n//         return {\n//           id: movieData.episode_id,\n//           title: movieData.title,\n//           releaseDate: movieData.release_date,\n//           openingText: movieData.opening_crawl\n//         };\n//       });\n//       //konwersja otrzymanych danych na pasujacy obiekt, ktory jest przesylany w do komponentu \n//       setMovies(transformedMovies);\n//     })\n// };\n\nreturn (\n  <React.Fragment>\n    <section>\n      <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n    </section>\n    <section>\n      <MoviesList movies={movies} />\n    </section>\n  </React.Fragment>\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}